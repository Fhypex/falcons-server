services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ${DEFAULT_USERNAME}
      POSTGRES_PASSWORD: ${DEFAULT_PASSWORD}
      POSTGRES_DB: server
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aymoose -d server"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5434:5432
    networks:
      - db_network
  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: keycloak
    volumes:
      - ./theme.jar:/opt/keycloak/providers/theme.jar
      - ./register-event-listener-local-network.jar:/opt/keycloak/providers/register-event-listener-local-network.jar
    extra_hosts:
    - "host.docker.internal:host-gateway"
    environment:
      - KEYCLOAK_ADMIN=${DEFAULT_USERNAME}
      - KEYCLOAK_ADMIN_PASSWORD=${DEFAULT_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/server
      - KC_DB_USERNAME=${DEFAULT_USERNAME}
      - KC_DB_PASSWORD=${DEFAULT_PASSWORD}
    ports:
      - 8090:8080
    command: start-dev
    restart: always  # Optional: Automatically restart container unless stopped
    networks:
      - db_network
    depends_on:
      - postgres
  minio:
    container_name: minio
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${DEFAULT_USERNAME}
      - MINIO_ROOT_PASSWORD=${DEFAULT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000
      - 9001:9001
    entrypoint: >
      /bin/sh -c "
      (sleep 4 && mc alias set ${MINIO_ALIAS} ${MINIO_API_URL} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} && /usr/bin/mc mb --ignore-existing ${MINIO_ALIAS}/${MINIO_DEFAULT_BUCKET}  && mc anonymous set download ${MINIO_ALIAS}/${MINIO_DEFAULT_BUCKET}) & /usr/bin/minio server /data --console-address ':${MINIO_WEB_PORT}'"  
    networks:
      - mo_network

 
# docker exec -it minio /bin/sh -c "/usr/bin/mc anonymous set download aymoose/server"

networks:
  mo_network:
    driver: bridge
  db_network:
    driver: bridge

volumes:
  postgres-data:   # Define the volume
    driver: local   # You can optionally specify the driver (default is local)
  minio_data:
    driver: local
